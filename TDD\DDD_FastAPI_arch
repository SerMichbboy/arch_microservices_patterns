app/
├── main.py                     # Точка входа (FastAPI, запуск приложения)
│
├── api/                        # Внешний слой (контракты: запросы/ответы)
│   ├── v1/
│   │   ├── endpoints/          # REST-эндпоинты (users.py, auth.py, ...)
│   │   └── schemas/            # DTO (Pydantic модели для валидации)
│   └── deps.py                 # Depends-фабрики для DI (репозитории, сервисы)
│
├── domain/                     # Бизнес-домены (чистая логика)
│   └── users/
│       ├── entities.py         # Сущности (User, Value Objects)
│       ├── services.py         # Доменные сервисы (правила работы с User)
│       └── exceptions.py       # Исключения доменного уровня
│
├── use_cases/                  # Сценарии использования (application layer)
│   └── users/
│       ├── register_user.py    # Регистрация пользователя
│       ├── login_user.py       # Логин
│       └── update_profile.py   # Обновление профиля
│
├── infrastructure/             # Инфраструктурный слой (адаптеры)
│   ├── db/                     # PostgreSQL
│   │   ├── config.py           # Настройки подключения
│   │   ├── session.py          # SessionLocal / engine
│   │   └── repositories.py     # UserRepository, BaseRepository
│   │
│   ├── redis/                  # Redis
│   │   ├── config.py           # Настройки Redis
│   │   ├── client.py           # Подключение (Redis клиент)
│   │   └── cache_service.py    # UserCacheService (кеширование пользователей)
│   │
│   ├── kafka/                  # Kafka
│   │   ├── config.py           # Настройки Kafka
│   │   ├── producer.py         # AIOKafkaProducer
│   │   ├── consumer.py         # AIOKafkaConsumer
│   │   └── events_service.py   # EventService (публикация/чтение событий)
│   │
│   └── email/                  # Внешний SMTP
│       ├── config.py           # Настройки SMTP
│       └── sender.py           # EmailSender (отправка писем)
│
└── tests/                      # Тесты (TDD-first)
    ├── unit/                   # Чистая бизнес-логика (domain, use_cases)
    │   ├── test_user_entity.py
    │   └── test_register_user_usecase.py
    │
    ├── integration/            # Тесты адаптеров (Redis, Kafka, DB, Email)
    │   ├── test_user_repo.py
    │   ├── test_cache_service.py
    │   └── test_kafka_service.py
    │
    └── e2e/                    # Сквозные сценарии (API → DB/Redis/Kafka)
        └── test_register_flow.py
